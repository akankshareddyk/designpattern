package composite;

import java.util.ArrayList;  
import java.util.Iterator;  
import java.util.List;  
 interface Shape {
	public void draw(String fillColor);
}
class Triangle implements Shape {
	public void draw(String fillColor) {
		System.out.println("Drawing Triangle filled with color :  "+fillColor);
	}
}       
 class Circle implements Shape {
	public void draw(String fillColor) {
		System.out.println("Drawing Circle filled  with color :"+fillColor);
	}

}
        class Drawing implements Shape{

	private List<Shape> shapes = new ArrayList<Shape>();
	public void draw(String fillColor) {
		for(Shape sh : shapes)
		{
			sh.draw(fillColor);
		}
	}
	public void add(Shape s){
		this.shapes.add(s);
	}
	public void remove(Shape s){
		shapes.remove(s);
	}
	public void clear(){
		System.out.println("Clearing all the shapes from drawing");
		this.shapes.clear();
	}
}
package composite;
import composite.Circle;
import composite.Drawing;
public class compositemain {
      
	public static void main(String[] args) {
		Shape triangle = new Triangle();
		Shape triangle2 = new Triangle();
		Shape circle = new Circle();
		
		Drawing drawing= new Drawing();
		drawing.add(triangle);
		drawing.add(triangle2);
		drawing.add(circle);
		
		drawing.draw("Red");
		
		drawing.clear();
		
		drawing.add(triangle);
		drawing.add(circle);
		drawing.draw("Green");
	}

}

