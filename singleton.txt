package design_patterns;
public class Singleton {
private static Singleton instance ;
   private Singleton(){}
   public static Singleton getInstance(){

   if (instance == null){  
      synchronized(Singleton.class){  
        if (instance== null){  
            instance = new Singleton();
        }  
    }              
    }    
      return instance;
   }
   public void method1(){
      System.out.println("I LIKE PROGRAMMING !");
   }
   public void  method2(){
       System.out.println("I ADMIRE TO BE A SOFTWARE DEVELOPER !");
   }
}
package design_patterns;
public class Singletonmain {
    public static void main(String[] args) {

      Singleton object = Singleton.getInstance();

      object.method1();
        object.method2();
   }
}
